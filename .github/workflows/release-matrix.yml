name: Build and Release Matrix

on:
  push:
    tags:
      - "v*" # This workflow runs when a tag is pushed matching this pattern
  workflow_dispatch: # Allows manual triggering from the GitHub UI

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1.9.0
        with:
          micromamba-version: "1.5.8-0"
          environment-file: environment.yml
          init-shell: ${{ matrix.os == 'windows-latest' && 'powershell' || 'bash' }}
          cache-environment: true
          post-cleanup: all

      - name: Upgrade Dependencies
        run: |
          micromamba run -n geo-env-master pip install --upgrade --no-deps --force-reinstall numpy pyinstaller

      - name: Package Application
        run: |
          micromamba run -n geo-env-master pyinstaller run.spec

      - name: Rename output file
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv dist/run.exe dist/run-${{ github.ref_name }}.exe
          else
            mv dist/run.app dist/run-${{ github.ref_name }}.app
          fi
        shell: ${{ matrix.os == 'windows-latest' && 'pwsh' || 'bash' }}

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.os }}
          path: |
            dist/run-${{ github.ref_name }}.exe
            dist/run-${{ github.ref_name }}.app

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Windows artifact
        uses: actions/download-artifact@v3
        with:
          name: build-windows-latest
          path: .

      - name: Download macOS artifact
        uses: actions/download-artifact@v3
        with:
          name: build-macos-latest
          path: .

      - name: Create Windows zip file
        if: needs.build.result == 'success'
        run: |
          Compress-Archive -Path run-${{ github.ref_name }}.exe -DestinationPath run-${{ github.ref_name }}-windows.zip
        shell: pwsh

      - name: Create macOS zip file
        if: needs.build.result == 'success'
        run: |
          zip -r run-${{ github.ref_name }}-macos.zip run-${{ github.ref_name }}.app

      - name: Release
        uses: softprops/action-gh-release@v2.0.8
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            run-${{ github.ref_name }}-windows.zip
            run-${{ github.ref_name }}-macos.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
